{"version":3,"sources":["../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/CardColumns.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js"],"names":["process","__webpack_require__","d","__webpack_exports__","Pie","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","Doughnut","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","Line","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","baseIsEqual","module","exports","other","Stack","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","bitmask","customizer","equalFunc","stack","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","__data__","size","assocIndexOf","index","pop","push","ListCache","result","get","has","Map","MapCache","LARGE_ARRAY_SIZE","pairs","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","toString","reIsNative","RegExp","replace","test","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","e","coreJsData","maskSrcKey","uid","exec","IE_PROTO","Hash","hash","string","hashClear","hashDelete","hashGet","hashHas","hashSet","entries","clear","entry","nativeCreate","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","SetCache","add","array","predicate","cache","Uint8Array","eq","mapToArray","setToArray","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","offset","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isArguments","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","iteratee","baseGetTag","isObjectLike","isLength","typedArrayTags","freeGlobal","freeExports","nodeType","freeModule","freeProcess","nodeUtil","types","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","arg","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","arrayAggregator","baseAggregator","baseIteratee","setter","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","srcValue","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","match","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","baseHasIn","hasPath","castPath","hasFunc","baseProperty","basePropertyDeep","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","className","cssModule","CardColumns","Tag","attributes","classes","CardHeader","freeSelf","root","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","baseIsEqualDeep","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","inverse","color","body","outline","innerRef","Card","CardBody","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","slice","pair","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","baseIsArguments","stubFalse","Buffer","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray"],"mappings":"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","file":"static/js/8.31730ceb.chunk.js","sourcesContent":["var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardColumns = function CardColumns(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-columns'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardColumns.propTypes = propTypes;\nCardColumns.defaultProps = defaultProps;\nexport default CardColumns;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;"],"sourceRoot":""}